/*
* generated by Xtext
*/
grammar InternalSeal;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package unifi.marcotinacci.thesis.seal.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package unifi.marcotinacci.thesis.seal.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import unifi.marcotinacci.thesis.seal.services.SealGrammarAccess;

}

@parser::members {
 
 	private SealGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SealGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRange
entryRuleRange 
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeAccess().getGroup()); }
(rule__Range__Group__0)
{ after(grammarAccess.getRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getNameAssignment()); }
(rule__Action__NameAssignment)
{ after(grammarAccess.getActionAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleDefine
entryRuleModuleDefine 
:
{ before(grammarAccess.getModuleDefineRule()); }
	 ruleModuleDefine
{ after(grammarAccess.getModuleDefineRule()); } 
	 EOF 
;

// Rule ModuleDefine
ruleModuleDefine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleDefineAccess().getGroup()); }
(rule__ModuleDefine__Group__0)
{ after(grammarAccess.getModuleDefineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNDCase
entryRuleNDCase 
:
{ before(grammarAccess.getNDCaseRule()); }
	 ruleNDCase
{ after(grammarAccess.getNDCaseRule()); } 
	 EOF 
;

// Rule NDCase
ruleNDCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNDCaseAccess().getGroup()); }
(rule__NDCase__Group__0)
{ after(grammarAccess.getNDCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdate
entryRuleUpdate 
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdateAccess().getAlternatives()); }
(rule__Update__Alternatives)
{ after(grammarAccess.getUpdateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnvironment
entryRuleEnvironment 
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
(rule__Environment__Group__0)
{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getLogicalParserRuleCall()); }
	ruleLogical
{ after(grammarAccess.getExpressionAccess().getLogicalParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogical
entryRuleLogical 
:
{ before(grammarAccess.getLogicalRule()); }
	 ruleLogical
{ after(grammarAccess.getLogicalRule()); } 
	 EOF 
;

// Rule Logical
ruleLogical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalAccess().getGroup()); }
(rule__Logical__Group__0)
{ after(grammarAccess.getLogicalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelation
entryRuleRelation 
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Program__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getEnvironmentAssignment_8_0()); }
(rule__Program__EnvironmentAssignment_8_0)
{ after(grammarAccess.getProgramAccess().getEnvironmentAssignment_8_0()); }
)

    |(
{ before(grammarAccess.getProgramAccess().getIsEmptyEnvAssignment_8_1()); }
(rule__Program__IsEmptyEnvAssignment_8_1)
{ after(grammarAccess.getProgramAccess().getIsEmptyEnvAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_0()); }
(rule__Type__NameAssignment_0)
{ after(grammarAccess.getTypeAccess().getNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
(rule__Type__NameAssignment_1)
{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getNameAssignment_2()); }
(rule__Type__NameAssignment_2)
{ after(grammarAccess.getTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getGroup_0()); }
(rule__Update__Group_0__0)
{ after(grammarAccess.getUpdateAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUpdateAccess().getGroup_1()); }
(rule__Update__Group_1__0)
{ after(grammarAccess.getUpdateAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getGroup_1_0_0()); }
(rule__Logical__Group_1_0_0__0)
{ after(grammarAccess.getLogicalAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getLogicalAccess().getGroup_1_0_1()); }
(rule__Logical__Group_1_0_1__0)
{ after(grammarAccess.getLogicalAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_1_0_0()); }
(rule__Relation__Group_1_0_0__0)
{ after(grammarAccess.getRelationAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getGroup_1_0_1()); }
(rule__Relation__Group_1_0_1__0)
{ after(grammarAccess.getRelationAccess().getGroup_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getGroup_1_0_2()); }
(rule__Relation__Group_1_0_2__0)
{ after(grammarAccess.getRelationAccess().getGroup_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getGroup_1_0_3()); }
(rule__Relation__Group_1_0_3__0)
{ after(grammarAccess.getRelationAccess().getGroup_1_0_3()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getGroup_1_0_4()); }
(rule__Relation__Group_1_0_4__0)
{ after(grammarAccess.getRelationAccess().getGroup_1_0_4()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getGroup_1_0_5()); }
(rule__Relation__Group_1_0_5__0)
{ after(grammarAccess.getRelationAccess().getGroup_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
(rule__Addition__Group_1_0_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
(rule__Addition__Group_1_0_1__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
(rule__Multiplication__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
(rule__Multiplication__Group_1_0_1__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
(rule__PrimaryExpression__Group_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
(rule__PrimaryExpression__Group_4__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
(rule__PrimaryExpression__Group_5__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getValueAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getFLOATTerminalRuleCall_1()); }
	RULE_FLOAT
{ after(grammarAccess.getValueAccess().getFLOATTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getBOOLTerminalRuleCall_2()); }
	RULE_BOOL
{ after(grammarAccess.getValueAccess().getBOOLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getActionsKeyword_0()); }

	'actions' 

{ after(grammarAccess.getProgramAccess().getActionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getProgramAccess().getActionsAssignment_2()); }
(rule__Program__ActionsAssignment_2)
{ after(grammarAccess.getProgramAccess().getActionsAssignment_2()); }
)
(
{ before(grammarAccess.getProgramAccess().getActionsAssignment_2()); }
(rule__Program__ActionsAssignment_2)*
{ after(grammarAccess.getProgramAccess().getActionsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getSubjectKeyword_4()); }

	'subject' 

{ after(grammarAccess.getProgramAccess().getSubjectKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__5__Impl
	rule__Program__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModulesAssignment_5()); }
(rule__Program__ModulesAssignment_5)
{ after(grammarAccess.getProgramAccess().getModulesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__6__Impl
	rule__Program__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModulesAssignment_6()); }
(rule__Program__ModulesAssignment_6)*
{ after(grammarAccess.getProgramAccess().getModulesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__7__Impl
	rule__Program__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getEnvironmentKeyword_7()); }

	'environment' 

{ after(grammarAccess.getProgramAccess().getEnvironmentKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__8__Impl
	rule__Program__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getAlternatives_8()); }
(rule__Program__Alternatives_8)
{ after(grammarAccess.getProgramAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getGroup_9()); }
(rule__Program__Group_9__0)?
{ after(grammarAccess.getProgramAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Program__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_9__0__Impl
	rule__Program__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getRangesKeyword_9_0()); }

	'ranges' 

{ after(grammarAccess.getProgramAccess().getRangesKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_9__1__Impl
	rule__Program__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_9_1()); }

	'{' 

{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_9__2__Impl
	rule__Program__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getRangesAssignment_9_2()); }
(rule__Program__RangesAssignment_9_2)
{ after(grammarAccess.getProgramAccess().getRangesAssignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_9__3__Impl
	rule__Program__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getGroup_9_3()); }
(rule__Program__Group_9_3__0)*
{ after(grammarAccess.getProgramAccess().getGroup_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_9_4()); }

	'}' 

{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Program__Group_9_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_9_3__0__Impl
	rule__Program__Group_9_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getCommaKeyword_9_3_0()); }

	',' 

{ after(grammarAccess.getProgramAccess().getCommaKeyword_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_9_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_9_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getRangesAssignment_9_3_1()); }
(rule__Program__RangesAssignment_9_3_1)
{ after(grammarAccess.getProgramAccess().getRangesAssignment_9_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Range__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getModuleAssignment_0()); }
(rule__Range__ModuleAssignment_0)
{ after(grammarAccess.getRangeAccess().getModuleAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getRangeAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__2__Impl
	rule__Range__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getVariableAssignment_2()); }
(rule__Range__VariableAssignment_2)
{ after(grammarAccess.getRangeAccess().getVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__3__Impl
	rule__Range__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getInKeyword_3()); }

	'in' 

{ after(grammarAccess.getRangeAccess().getInKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__4__Impl
	rule__Range__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getLeftSquareBracketKeyword_4()); }

	'[' 

{ after(grammarAccess.getRangeAccess().getLeftSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__5__Impl
	rule__Range__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getFromAssignment_5()); }
(rule__Range__FromAssignment_5)
{ after(grammarAccess.getRangeAccess().getFromAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__6__Impl
	rule__Range__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getRangeAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__7__Impl
	rule__Range__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getToAssignment_7()); }
(rule__Range__ToAssignment_7)
{ after(grammarAccess.getRangeAccess().getToAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__8__Impl
	rule__Range__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getRightSquareBracketKeyword_8()); }

	']' 

{ after(grammarAccess.getRangeAccess().getRightSquareBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getGroup_9()); }
(rule__Range__Group_9__0)?
{ after(grammarAccess.getRangeAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Range__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_9__0__Impl
	rule__Range__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getDeltaKeyword_9_0()); }

	'delta' 

{ after(grammarAccess.getRangeAccess().getDeltaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_9__1__Impl
	rule__Range__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getEqualsSignKeyword_9_1()); }

	'=' 

{ after(grammarAccess.getRangeAccess().getEqualsSignKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getDeltaAssignment_9_2()); }
(rule__Range__DeltaAssignment_9_2)
{ after(grammarAccess.getRangeAccess().getDeltaAssignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModuleDefine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group__0__Impl
	rule__ModuleDefine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getModuleDefineAccess().getModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group__1__Impl
	rule__ModuleDefine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getNameAssignment_1()); }
(rule__ModuleDefine__NameAssignment_1)
{ after(grammarAccess.getModuleDefineAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group__2__Impl
	rule__ModuleDefine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModuleDefineAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group__3__Impl
	rule__ModuleDefine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModuleDefineAccess().getGroup_3()); }
(rule__ModuleDefine__Group_3__0)
{ after(grammarAccess.getModuleDefineAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getModuleDefineAccess().getGroup_3()); }
(rule__ModuleDefine__Group_3__0)*
{ after(grammarAccess.getModuleDefineAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group__4__Impl
	rule__ModuleDefine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModuleDefineAccess().getGroup_4()); }
(rule__ModuleDefine__Group_4__0)
{ after(grammarAccess.getModuleDefineAccess().getGroup_4()); }
)
(
{ before(grammarAccess.getModuleDefineAccess().getGroup_4()); }
(rule__ModuleDefine__Group_4__0)*
{ after(grammarAccess.getModuleDefineAccess().getGroup_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group__5__Impl
	rule__ModuleDefine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getGroup_5()); }
(rule__ModuleDefine__Group_5__0)*
{ after(grammarAccess.getModuleDefineAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getModuleDefineAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ModuleDefine__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group_3__0__Impl
	rule__ModuleDefine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getVariablesAssignment_3_0()); }
(rule__ModuleDefine__VariablesAssignment_3_0)
{ after(grammarAccess.getModuleDefineAccess().getVariablesAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getModuleDefineAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleDefine__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group_4__0__Impl
	rule__ModuleDefine__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getRulesAssignment_4_0()); }
(rule__ModuleDefine__RulesAssignment_4_0)
{ after(grammarAccess.getModuleDefineAccess().getRulesAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getModuleDefineAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleDefine__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group_5__0__Impl
	rule__ModuleDefine__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getTargetKeyword_5_0()); }

	'target' 

{ after(grammarAccess.getModuleDefineAccess().getTargetKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group_5__1__Impl
	rule__ModuleDefine__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getNeverKeyword_5_1()); }

	'never' 

{ after(grammarAccess.getModuleDefineAccess().getNeverKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDefine__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDefine__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getNeverAssignment_5_2()); }
(rule__ModuleDefine__NeverAssignment_5_2)
{ after(grammarAccess.getModuleDefineAccess().getNeverAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
(rule__VariableDeclaration__TypeAssignment_0)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
(rule__VariableDeclaration__NameAssignment_1)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getExprAssignment_3()); }
(rule__VariableDeclaration__ExprAssignment_3)
{ after(grammarAccess.getVariableDeclarationAccess().getExprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getCondAssignment_0()); }
(rule__Rule__CondAssignment_0)
{ after(grammarAccess.getRuleAccess().getCondAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getRuleAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getActionAssignment_2()); }
(rule__Rule__ActionAssignment_2)
{ after(grammarAccess.getRuleAccess().getActionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getRuleAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRuleAccess().getNdCasesAssignment_4()); }
(rule__Rule__NdCasesAssignment_4)
{ after(grammarAccess.getRuleAccess().getNdCasesAssignment_4()); }
)
(
{ before(grammarAccess.getRuleAccess().getNdCasesAssignment_4()); }
(rule__Rule__NdCasesAssignment_4)*
{ after(grammarAccess.getRuleAccess().getNdCasesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NDCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NDCase__Group__0__Impl
	rule__NDCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NDCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNDCaseAccess().getEqualsSignGreaterThanSignKeyword_0()); }

	'=>' 

{ after(grammarAccess.getNDCaseAccess().getEqualsSignGreaterThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NDCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NDCase__Group__1__Impl
	rule__NDCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NDCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNDCaseAccess().getCasesAssignment_1()); }
(rule__NDCase__CasesAssignment_1)
{ after(grammarAccess.getNDCaseAccess().getCasesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NDCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NDCase__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NDCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNDCaseAccess().getGroup_2()); }
(rule__NDCase__Group_2__0)*
{ after(grammarAccess.getNDCaseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NDCase__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NDCase__Group_2__0__Impl
	rule__NDCase__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NDCase__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNDCaseAccess().getNumberSignKeyword_2_0()); }

	'#' 

{ after(grammarAccess.getNDCaseAccess().getNumberSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NDCase__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NDCase__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NDCase__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNDCaseAccess().getCasesAssignment_2_1()); }
(rule__NDCase__CasesAssignment_2_1)
{ after(grammarAccess.getNDCaseAccess().getCasesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getCaseAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWeightAssignment_1()); }
(rule__Case__WeightAssignment_1)
{ after(grammarAccess.getCaseAccess().getWeightAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__2__Impl
	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGroup_2()); }
(rule__Case__Group_2__0)?
{ after(grammarAccess.getCaseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__3__Impl
	rule__Case__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getCaseAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__4__Impl
	rule__Case__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getUpdateAssignment_4()); }
(rule__Case__UpdateAssignment_4)
{ after(grammarAccess.getCaseAccess().getUpdateAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGroup_5()); }
(rule__Case__Group_5__0)*
{ after(grammarAccess.getCaseAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Case__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2__0__Impl
	rule__Case__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getHasConditionAssignment_2_0()); }
(rule__Case__HasConditionAssignment_2_0)
{ after(grammarAccess.getCaseAccess().getHasConditionAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCondAssignment_2_1()); }
(rule__Case__CondAssignment_2_1)
{ after(grammarAccess.getCaseAccess().getCondAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_5__0__Impl
	rule__Case__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getCaseAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getUpdateAssignment_5_1()); }
(rule__Case__UpdateAssignment_5_1)
{ after(grammarAccess.getCaseAccess().getUpdateAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Update__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group_0__0__Impl
	rule__Update__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getNoActionAction_0_0()); }
(

)
{ after(grammarAccess.getUpdateAccess().getNoActionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getNoactionKeyword_0_1()); }

	'noaction' 

{ after(grammarAccess.getUpdateAccess().getNoactionKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Update__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group_1__0__Impl
	rule__Update__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getAssignAction_1_0()); }
(

)
{ after(grammarAccess.getUpdateAccess().getAssignAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group_1__1__Impl
	rule__Update__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getVariableAssignment_1_1()); }
(rule__Update__VariableAssignment_1_1)
{ after(grammarAccess.getUpdateAccess().getVariableAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group_1__2__Impl
	rule__Update__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getEqualsSignKeyword_1_2()); }

	'=' 

{ after(grammarAccess.getUpdateAccess().getEqualsSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getExprAssignment_1_3()); }
(rule__Update__ExprAssignment_1_3)
{ after(grammarAccess.getUpdateAccess().getExprAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Environment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getModulesAssignment_0()); }
(rule__Environment__ModulesAssignment_0)
{ after(grammarAccess.getEnvironmentAccess().getModulesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getGroup_1()); }
(rule__Environment__Group_1__0)*
{ after(grammarAccess.getEnvironmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Environment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group_1__0__Impl
	rule__Environment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getVerticalLineLeftCurlyBracketKeyword_1_0()); }

	'|{' 

{ after(grammarAccess.getEnvironmentAccess().getVerticalLineLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group_1__1__Impl
	rule__Environment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEnvironmentAccess().getActionsAssignment_1_1()); }
(rule__Environment__ActionsAssignment_1_1)
{ after(grammarAccess.getEnvironmentAccess().getActionsAssignment_1_1()); }
)
(
{ before(grammarAccess.getEnvironmentAccess().getActionsAssignment_1_1()); }
(rule__Environment__ActionsAssignment_1_1)*
{ after(grammarAccess.getEnvironmentAccess().getActionsAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group_1__2__Impl
	rule__Environment__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getRightCurlyBracketVerticalLineKeyword_1_2()); }

	'}|' 

{ after(grammarAccess.getEnvironmentAccess().getRightCurlyBracketVerticalLineKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getModulesAssignment_1_3()); }
(rule__Environment__ModulesAssignment_1_3)
{ after(grammarAccess.getEnvironmentAccess().getModulesAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Logical__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group__0__Impl
	rule__Logical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getRelationParserRuleCall_0()); }
	ruleRelation
{ after(grammarAccess.getLogicalAccess().getRelationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getGroup_1()); }
(rule__Logical__Group_1__0)*
{ after(grammarAccess.getLogicalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group_1__0__Impl
	rule__Logical__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getAlternatives_1_0()); }
(rule__Logical__Alternatives_1_0)
{ after(grammarAccess.getLogicalAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getRightAssignment_1_1()); }
(rule__Logical__RightAssignment_1_1)
{ after(grammarAccess.getLogicalAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group_1_0_0__0__Impl
	rule__Logical__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getAndLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getLogicalAccess().getAndLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getAndKeyword_1_0_0_1()); }

	'and' 

{ after(grammarAccess.getLogicalAccess().getAndKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group_1_0_1__0__Impl
	rule__Logical__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getOrLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getLogicalAccess().getOrLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getOrKeyword_1_0_1_1()); }

	'or' 

{ after(grammarAccess.getLogicalAccess().getOrKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
{ after(grammarAccess.getRelationAccess().getAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_1()); }
(rule__Relation__Group_1__0)?
{ after(grammarAccess.getRelationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getAlternatives_1_0()); }
(rule__Relation__Alternatives_1_0)
{ after(grammarAccess.getRelationAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightAssignment_1_1()); }
(rule__Relation__RightAssignment_1_1)
{ after(grammarAccess.getRelationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_0__0__Impl
	rule__Relation__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLeqLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationAccess().getLeqLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLessThanSignEqualsSignKeyword_1_0_0_1()); }

	'<=' 

{ after(grammarAccess.getRelationAccess().getLessThanSignEqualsSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_1__0__Impl
	rule__Relation__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLessLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getRelationAccess().getLessLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLessThanSignKeyword_1_0_1_1()); }

	'<' 

{ after(grammarAccess.getRelationAccess().getLessThanSignKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_2__0__Impl
	rule__Relation__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getEqLeftAction_1_0_2_0()); }
(

)
{ after(grammarAccess.getRelationAccess().getEqLeftAction_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getEqualsSignEqualsSignKeyword_1_0_2_1()); }

	'==' 

{ after(grammarAccess.getRelationAccess().getEqualsSignEqualsSignKeyword_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_3__0__Impl
	rule__Relation__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getNeqLeftAction_1_0_3_0()); }
(

)
{ after(grammarAccess.getRelationAccess().getNeqLeftAction_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getExclamationMarkEqualsSignKeyword_1_0_3_1()); }

	'!=' 

{ after(grammarAccess.getRelationAccess().getExclamationMarkEqualsSignKeyword_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_4__0__Impl
	rule__Relation__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGeqLeftAction_1_0_4_0()); }
(

)
{ after(grammarAccess.getRelationAccess().getGeqLeftAction_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGreaterThanSignEqualsSignKeyword_1_0_4_1()); }

	'>=' 

{ after(grammarAccess.getRelationAccess().getGreaterThanSignEqualsSignKeyword_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_5__0__Impl
	rule__Relation__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGtrLeftAction_1_0_5_0()); }
(

)
{ after(grammarAccess.getRelationAccess().getGtrLeftAction_1_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGreaterThanSignKeyword_1_0_5_1()); }

	'>' 

{ after(grammarAccess.getRelationAccess().getGreaterThanSignKeyword_1_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
(rule__Addition__Alternatives_1_0)
{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__0__Impl
	rule__Addition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__0__Impl
	rule__Addition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMultiplicationAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
(rule__Multiplication__Alternatives_1_0)
{ after(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__0__Impl
	rule__Multiplication__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__0__Impl
	rule__Multiplication__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotAction_1_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getNotAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotKeyword_1_1()); }

	'not' 

{ after(grammarAccess.getPrimaryExpressionAccess().getNotKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCondAssignment_1_2()); }
(rule__PrimaryExpression__CondAssignment_1_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getCondAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_2_1()); }
(rule__PrimaryExpression__ValueAssignment_2_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getQuantifierAction_3_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getQuantifierAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__1__Impl
	rule__PrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExistsKeyword_3_1()); }

	'exists' 

{ after(grammarAccess.getPrimaryExpressionAccess().getExistsKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__2__Impl
	rule__PrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_3_2()); }
(rule__PrimaryExpression__NameAssignment_3_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__3__Impl
	rule__PrimaryExpression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getColonKeyword_3_3()); }

	':' 

{ after(grammarAccess.getPrimaryExpressionAccess().getColonKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__4__Impl
	rule__PrimaryExpression__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getModuleAssignment_3_4()); }
(rule__PrimaryExpression__ModuleAssignment_3_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getModuleAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__5__Impl
	rule__PrimaryExpression__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSuchThatKeyword_3_5()); }

	'such that' 

{ after(grammarAccess.getPrimaryExpressionAccess().getSuchThatKeyword_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCondAssignment_3_6()); }
(rule__PrimaryExpression__CondAssignment_3_6)
{ after(grammarAccess.getPrimaryExpressionAccess().getCondAssignment_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__PrimaryExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExternalReferenceAction_4_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getExternalReferenceAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__1__Impl
	rule__PrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getModuleAssignment_4_1()); }
(rule__PrimaryExpression__ModuleAssignment_4_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getModuleAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__2__Impl
	rule__PrimaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_4_2()); }

	'.' 

{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_4_3()); }
(rule__PrimaryExpression__VariableAssignment_4_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__0__Impl
	rule__PrimaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLocalReferenceAction_5_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getLocalReferenceAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__1__Impl
	rule__PrimaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5_1()); }
(rule__PrimaryExpression__Group_5_1__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_5_2()); }
(rule__PrimaryExpression__VariableAssignment_5_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5_1__0__Impl
	rule__PrimaryExpression__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getThisKeyword_5_1_0()); }

	'this' 

{ after(grammarAccess.getPrimaryExpressionAccess().getThisKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_5_1_1()); }

	'.' 

{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Program__ActionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getActionsActionParserRuleCall_2_0()); }
	ruleAction{ after(grammarAccess.getProgramAccess().getActionsActionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ModulesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModulesModuleDefineParserRuleCall_5_0()); }
	ruleModuleDefine{ after(grammarAccess.getProgramAccess().getModulesModuleDefineParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ModulesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModulesModuleDefineParserRuleCall_6_0()); }
	ruleModuleDefine{ after(grammarAccess.getProgramAccess().getModulesModuleDefineParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__EnvironmentAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getEnvironmentEnvironmentParserRuleCall_8_0_0()); }
	ruleEnvironment{ after(grammarAccess.getProgramAccess().getEnvironmentEnvironmentParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__IsEmptyEnvAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getIsEmptyEnvIsEmptyKeyword_8_1_0()); }
(
{ before(grammarAccess.getProgramAccess().getIsEmptyEnvIsEmptyKeyword_8_1_0()); }

	'is empty' 

{ after(grammarAccess.getProgramAccess().getIsEmptyEnvIsEmptyKeyword_8_1_0()); }
)

{ after(grammarAccess.getProgramAccess().getIsEmptyEnvIsEmptyKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__RangesAssignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getRangesRangeParserRuleCall_9_2_0()); }
	ruleRange{ after(grammarAccess.getProgramAccess().getRangesRangeParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__RangesAssignment_9_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getRangesRangeParserRuleCall_9_3_1_0()); }
	ruleRange{ after(grammarAccess.getProgramAccess().getRangesRangeParserRuleCall_9_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__ModuleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getModuleModuleDefineCrossReference_0_0()); }
(
{ before(grammarAccess.getRangeAccess().getModuleModuleDefineIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRangeAccess().getModuleModuleDefineIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRangeAccess().getModuleModuleDefineCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getVariableVariableDeclarationCrossReference_2_0()); }
(
{ before(grammarAccess.getRangeAccess().getVariableVariableDeclarationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRangeAccess().getVariableVariableDeclarationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRangeAccess().getVariableVariableDeclarationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__FromAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getFromValueParserRuleCall_5_0()); }
	ruleValue{ after(grammarAccess.getRangeAccess().getFromValueParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__ToAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getToValueParserRuleCall_7_0()); }
	ruleValue{ after(grammarAccess.getRangeAccess().getToValueParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__DeltaAssignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getDeltaValueParserRuleCall_9_2_0()); }
	ruleValue{ after(grammarAccess.getRangeAccess().getDeltaValueParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModuleDefineAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__VariablesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getVariablesVariableDeclarationParserRuleCall_3_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getModuleDefineAccess().getVariablesVariableDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__RulesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getRulesRuleParserRuleCall_4_0_0()); }
	ruleRule{ after(grammarAccess.getModuleDefineAccess().getRulesRuleParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDefine__NeverAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDefineAccess().getNeverExpressionParserRuleCall_5_2_0()); }
	ruleExpression{ after(grammarAccess.getModuleDefineAccess().getNeverExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getExprExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAccess().getExprExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIntKeyword_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getNameIntKeyword_0_0()); }

	'int' 

{ after(grammarAccess.getTypeAccess().getNameIntKeyword_0_0()); }
)

{ after(grammarAccess.getTypeAccess().getNameIntKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameFloatKeyword_1_0()); }
(
{ before(grammarAccess.getTypeAccess().getNameFloatKeyword_1_0()); }

	'float' 

{ after(grammarAccess.getTypeAccess().getNameFloatKeyword_1_0()); }
)

{ after(grammarAccess.getTypeAccess().getNameFloatKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameBoolKeyword_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getNameBoolKeyword_2_0()); }

	'bool' 

{ after(grammarAccess.getTypeAccess().getNameBoolKeyword_2_0()); }
)

{ after(grammarAccess.getTypeAccess().getNameBoolKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__CondAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getCondExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getRuleAccess().getCondExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ActionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getActionActionCrossReference_2_0()); }
(
{ before(grammarAccess.getRuleAccess().getActionActionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRuleAccess().getActionActionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRuleAccess().getActionActionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NdCasesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNdCasesNDCaseParserRuleCall_4_0()); }
	ruleNDCase{ after(grammarAccess.getRuleAccess().getNdCasesNDCaseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NDCase__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNDCaseAccess().getCasesCaseParserRuleCall_1_0()); }
	ruleCase{ after(grammarAccess.getNDCaseAccess().getCasesCaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NDCase__CasesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNDCaseAccess().getCasesCaseParserRuleCall_2_1_0()); }
	ruleCase{ after(grammarAccess.getNDCaseAccess().getCasesCaseParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__WeightAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWeightExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCaseAccess().getWeightExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__HasConditionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getHasConditionCommaKeyword_2_0_0()); }
(
{ before(grammarAccess.getCaseAccess().getHasConditionCommaKeyword_2_0_0()); }

	',' 

{ after(grammarAccess.getCaseAccess().getHasConditionCommaKeyword_2_0_0()); }
)

{ after(grammarAccess.getCaseAccess().getHasConditionCommaKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__CondAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCondExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getCaseAccess().getCondExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__UpdateAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getUpdateUpdateParserRuleCall_4_0()); }
	ruleUpdate{ after(grammarAccess.getCaseAccess().getUpdateUpdateParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__UpdateAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getUpdateUpdateParserRuleCall_5_1_0()); }
	ruleUpdate{ after(grammarAccess.getCaseAccess().getUpdateUpdateParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Update__VariableAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getVariableVariableDeclarationCrossReference_1_1_0()); }
(
{ before(grammarAccess.getUpdateAccess().getVariableVariableDeclarationIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getUpdateAccess().getVariableVariableDeclarationIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getUpdateAccess().getVariableVariableDeclarationCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ExprAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getExprExpressionParserRuleCall_1_3_0()); }
	ruleExpression{ after(grammarAccess.getUpdateAccess().getExprExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__ModulesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getModulesModuleDefineCrossReference_0_0()); }
(
{ before(grammarAccess.getEnvironmentAccess().getModulesModuleDefineIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEnvironmentAccess().getModulesModuleDefineIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getEnvironmentAccess().getModulesModuleDefineCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__ActionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getActionsActionCrossReference_1_1_0()); }
(
{ before(grammarAccess.getEnvironmentAccess().getActionsActionIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEnvironmentAccess().getActionsActionIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getEnvironmentAccess().getActionsActionCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__ModulesAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getModulesModuleDefineCrossReference_1_3_0()); }
(
{ before(grammarAccess.getEnvironmentAccess().getModulesModuleDefineIDTerminalRuleCall_1_3_0_1()); }
	RULE_ID{ after(grammarAccess.getEnvironmentAccess().getModulesModuleDefineIDTerminalRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getEnvironmentAccess().getModulesModuleDefineCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getRightRelationParserRuleCall_1_1_0()); }
	ruleRelation{ after(grammarAccess.getLogicalAccess().getRightRelationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightAdditionParserRuleCall_1_1_0()); }
	ruleAddition{ after(grammarAccess.getRelationAccess().getRightAdditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getMultiplicationAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CondAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCondPrimaryExpressionParserRuleCall_1_2_0()); }
	rulePrimaryExpression{ after(grammarAccess.getPrimaryExpressionAccess().getCondPrimaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueValueParserRuleCall_2_1_0()); }
	ruleValue{ after(grammarAccess.getPrimaryExpressionAccess().getValueValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_3_2_0()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ModuleAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getModuleModuleDefineCrossReference_3_4_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getModuleModuleDefineIDTerminalRuleCall_3_4_0_1()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getModuleModuleDefineIDTerminalRuleCall_3_4_0_1()); }
)
{ after(grammarAccess.getPrimaryExpressionAccess().getModuleModuleDefineCrossReference_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CondAssignment_3_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCondPrimaryExpressionParserRuleCall_3_6_0()); }
	rulePrimaryExpression{ after(grammarAccess.getPrimaryExpressionAccess().getCondPrimaryExpressionParserRuleCall_3_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ModuleAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getModuleQuantifierCrossReference_4_1_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getModuleQuantifierIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getModuleQuantifierIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getPrimaryExpressionAccess().getModuleQuantifierCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__VariableAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDeclarationCrossReference_4_3_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDeclarationIDTerminalRuleCall_4_3_0_1()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDeclarationIDTerminalRuleCall_4_3_0_1()); }
)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDeclarationCrossReference_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__VariableAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDeclarationCrossReference_5_2_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDeclarationIDTerminalRuleCall_5_2_0_1()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDeclarationIDTerminalRuleCall_5_2_0_1()); }
)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDeclarationCrossReference_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INT : ('0'..'9')+;

RULE_FLOAT : ('-'? RULE_INT* ('.' RULE_INT+)?|'-'? RULE_INT+ '.'|'-'? RULE_INT+ ('.' RULE_INT*)? ('e'|'E') ('-'|'+')? RULE_INT+);

RULE_BOOL : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


